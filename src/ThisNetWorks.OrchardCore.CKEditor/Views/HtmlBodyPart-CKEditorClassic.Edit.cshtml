@model HtmlBodyPartViewModel

@{
    var settings = Model.TypePartDefinition.GetSettings<HtmlBodyPartSettings>();
    var culture = await Orchard.GetContentCultureAsync(Model.ContentItem);
}

<script asp-name="ckeditorclassic" asp-src="~/ThisNetWorks.OrchardCore.CKEditor/scripts/ckeditor-classic/ckeditor.js" at="Foot"></script>

<div class="form-group">
    <label asp-for="Html">@Model.TypePartDefinition.DisplayName()</label>
    <textarea asp-for="Html" rows="5" class="form-control content-preview-text" dir="@culture.GetLanguageDirection()"></textarea>
    <span class="hint">@T["The body of the content item."]</span>
</div>

<script at="Foot">
    $(function () {
        var optionsTextArea = document.getElementById('@Html.IdFor(x => x.Html)');
        // When part rendered by a flow part only the elements scripts are rendered, so the html element will not exist.
        if (optionsTextArea) {
            const editor = ClassicEditor
                .create(optionsTextArea)
                .catch(error => {
                    console.error(error);
                });

            editor.then(e => {
                e.model.document.on( 'change:data', () => {
                    // Update the text area source element.
                    e.updateSourceElement();
                    // Then trigger render.
                    $(document).trigger('contentpreview:render');
                } );
            });
        }
    });
</script>
